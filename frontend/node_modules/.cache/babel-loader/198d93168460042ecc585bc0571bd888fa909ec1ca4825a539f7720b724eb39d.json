{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANAL\\\\chat-app\\\\frontend\\\\src\\\\components\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport socketService from '../services/socket';\nimport { messageAPI } from '../services/api';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport UserList from './UserList';\nimport TypingIndicator from './TypingIndicator';\nimport toast from 'react-hot-toast';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState('general');\n  const [loading, setLoading] = useState(true);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [showUserList, setShowUserList] = useState(false);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  const {\n    user,\n    logout\n  } = useAuth();\n  useEffect(() => {\n    // Removed duplicate initializeChat function\n\n    const setupSocketListeners = () => {\n      socketService.onMessage(message => {\n        setMessages(prev => [...prev, message]);\n      });\n      socketService.onUsersUpdated(userList => {\n        setUsers(userList);\n      });\n      socketService.onTyping(data => {\n        if (data.room === currentRoom) {\n          setTypingUsers(prev => {\n            if (data.isTyping) {\n              return prev.includes(data.username) ? prev : [...prev, data.username];\n            } else {\n              return prev.filter(username => username !== data.username);\n            }\n          });\n        }\n      });\n      socketService.onError(error => {\n        console.error('Socket error:', error);\n        toast.error(error.message || 'Connection error');\n      });\n    };\n    initializeChat();\n    setupSocketListeners();\n    return () => {\n      socketService.removeAllListeners();\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [currentRoom]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const initializeChat = async () => {\n    try {\n      await loadMessages();\n      socketService.joinRoom(currentRoom);\n    } catch (error) {\n      console.error('Failed to initialize chat:', error);\n      toast.error('Failed to load chat');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMessages = async () => {\n    try {\n      const response = await messageAPI.getMessages(currentRoom);\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Failed to load messages:', error);\n      toast.error('Failed to load messages');\n    }\n  };\n  const setupSocketListeners = () => {\n    socketService.onMessage(message => {\n      setMessages(prev => [...prev, message]);\n    });\n    socketService.onUsersUpdated(userList => {\n      setUsers(userList);\n    });\n    socketService.onTyping(data => {\n      if (data.room === currentRoom) {\n        setTypingUsers(prev => {\n          if (data.isTyping) {\n            return prev.includes(data.username) ? prev : [...prev, data.username];\n          } else {\n            return prev.filter(username => username !== data.username);\n          }\n        });\n      }\n    });\n    socketService.onError(error => {\n      console.error('Socket error:', error);\n      toast.error(error.message || 'Connection error');\n    });\n  };\n  const handleSendMessage = async content => {\n    if (!content.trim()) return;\n    try {\n      socketService.sendMessage({\n        content: content.trim(),\n        room: currentRoom\n      });\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      toast.error('Failed to send message');\n    }\n  };\n  const handleDeleteMessage = async messageId => {\n    try {\n      await messageAPI.deleteMessage(messageId);\n      setMessages(prev => prev.filter(msg => msg._id !== messageId));\n      toast.success('Message deleted');\n    } catch (error) {\n      console.error('Failed to delete message:', error);\n      toast.error('Failed to delete message');\n    }\n  };\n  const handleEditMessage = async (messageId, newContent) => {\n    try {\n      const response = await messageAPI.editMessage(messageId, newContent);\n      setMessages(prev => prev.map(msg => msg._id === messageId ? response.data : msg));\n      toast.success('Message updated');\n    } catch (error) {\n      console.error('Failed to edit message:', error);\n      toast.error('Failed to edit message');\n    }\n  };\n  const handleTyping = isTyping => {\n    if (isTyping) {\n      socketService.startTyping(currentRoom);\n\n      // Clear existing timeout\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      // Set new timeout to stop typing\n      typingTimeoutRef.current = setTimeout(() => {\n        socketService.stopTyping(currentRoom);\n      }, 3000);\n    } else {\n      socketService.stopTyping(currentRoom);\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const toggleUserList = () => {\n    setShowUserList(!showUserList);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chat...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"FlashTalk - \", currentRoom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"online-count\",\n          children: [users.length, \" online\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleUserList,\n          className: \"users-button\",\n          children: \"\\uD83D\\uDC65 Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          messages: messages,\n          currentUser: user,\n          onDeleteMessage: handleDeleteMessage,\n          onEditMessage: handleEditMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n          users: typingUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), showUserList && /*#__PURE__*/_jsxDEV(UserList, {\n        users: users,\n        currentUser: user,\n        onClose: () => setShowUserList(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSendMessage: handleSendMessage,\n      onTyping: handleTyping,\n      disabled: !socketService.isConnected()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"uUdmA7xf95hOZPJKuRQJTYi8rwY=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","socketService","messageAPI","MessageList","MessageInput","UserList","TypingIndicator","toast","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","users","setUsers","currentRoom","setCurrentRoom","loading","setLoading","typingUsers","setTypingUsers","showUserList","setShowUserList","messagesEndRef","typingTimeoutRef","user","logout","setupSocketListeners","onMessage","message","prev","onUsersUpdated","userList","onTyping","data","room","isTyping","includes","username","filter","onError","error","console","initializeChat","removeAllListeners","current","clearTimeout","scrollToBottom","loadMessages","joinRoom","response","getMessages","handleSendMessage","content","trim","sendMessage","handleDeleteMessage","messageId","deleteMessage","msg","_id","success","handleEditMessage","newContent","editMessage","map","handleTyping","startTyping","setTimeout","stopTyping","_messagesEndRef$curre","scrollIntoView","behavior","toggleUserList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","currentUser","onDeleteMessage","onEditMessage","ref","onClose","onSendMessage","disabled","isConnected","_c","$RefreshReg$"],"sources":["C:/Users/SANAL/chat-app/frontend/src/components/chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport socketService from '../services/socket';\r\nimport { messageAPI } from '../services/api';\r\nimport MessageList from './MessageList';\r\nimport MessageInput from './MessageInput';\r\nimport UserList from './UserList';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport toast from 'react-hot-toast';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [currentRoom, setCurrentRoom] = useState('general');\r\n  const [loading, setLoading] = useState(true);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [showUserList, setShowUserList] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  const { user, logout } = useAuth();\r\n\r\n  useEffect(() => {\r\n    // Removed duplicate initializeChat function\r\n\r\n    const setupSocketListeners = () => {\r\n      socketService.onMessage((message) => {\r\n        setMessages(prev => [...prev, message]);\r\n      });\r\n\r\n      socketService.onUsersUpdated((userList) => {\r\n        setUsers(userList);\r\n      });\r\n\r\n      socketService.onTyping((data) => {\r\n        if (data.room === currentRoom) {\r\n          setTypingUsers(prev => {\r\n            if (data.isTyping) {\r\n              return prev.includes(data.username) ? prev : [...prev, data.username];\r\n            } else {\r\n              return prev.filter(username => username !== data.username);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      socketService.onError((error) => {\r\n        console.error('Socket error:', error);\r\n        toast.error(error.message || 'Connection error');\r\n      });\r\n    };\r\n\r\n    initializeChat();\r\n    setupSocketListeners();\r\n    \r\n    return () => {\r\n      socketService.removeAllListeners();\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [currentRoom]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const initializeChat = async () => {\r\n    try {\r\n      await loadMessages();\r\n      socketService.joinRoom(currentRoom);\r\n    } catch (error) {\r\n      console.error('Failed to initialize chat:', error);\r\n      toast.error('Failed to load chat');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadMessages = async () => {\r\n    try {\r\n      const response = await messageAPI.getMessages(currentRoom);\r\n      setMessages(response.data.messages);\r\n    } catch (error) {\r\n      console.error('Failed to load messages:', error);\r\n      toast.error('Failed to load messages');\r\n    }\r\n  };\r\n\r\n  const setupSocketListeners = () => {\r\n    socketService.onMessage((message) => {\r\n      setMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    socketService.onUsersUpdated((userList) => {\r\n      setUsers(userList);\r\n    });\r\n\r\n    socketService.onTyping((data) => {\r\n      if (data.room === currentRoom) {\r\n        setTypingUsers(prev => {\r\n          if (data.isTyping) {\r\n            return prev.includes(data.username) ? prev : [...prev, data.username];\r\n          } else {\r\n            return prev.filter(username => username !== data.username);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    socketService.onError((error) => {\r\n      console.error('Socket error:', error);\r\n      toast.error(error.message || 'Connection error');\r\n    });\r\n  };\r\n\r\n  const handleSendMessage = async (content) => {\r\n    if (!content.trim()) return;\r\n\r\n    try {\r\n      socketService.sendMessage({\r\n        content: content.trim(),\r\n        room: currentRoom\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n      toast.error('Failed to send message');\r\n    }\r\n  };\r\n\r\n  const handleDeleteMessage = async (messageId) => {\r\n    try {\r\n      await messageAPI.deleteMessage(messageId);\r\n      setMessages(prev => prev.filter(msg => msg._id !== messageId));\r\n      toast.success('Message deleted');\r\n    } catch (error) {\r\n      console.error('Failed to delete message:', error);\r\n      toast.error('Failed to delete message');\r\n    }\r\n  };\r\n\r\n  const handleEditMessage = async (messageId, newContent) => {\r\n    try {\r\n      const response = await messageAPI.editMessage(messageId, newContent);\r\n      setMessages(prev => prev.map(msg => \r\n        msg._id === messageId ? response.data : msg\r\n      ));\r\n      toast.success('Message updated');\r\n    } catch (error) {\r\n      console.error('Failed to edit message:', error);\r\n      toast.error('Failed to edit message');\r\n    }\r\n  };\r\n\r\n  const handleTyping = (isTyping) => {\r\n    if (isTyping) {\r\n      socketService.startTyping(currentRoom);\r\n      \r\n      // Clear existing timeout\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n      \r\n      // Set new timeout to stop typing\r\n      typingTimeoutRef.current = setTimeout(() => {\r\n        socketService.stopTyping(currentRoom);\r\n      }, 3000);\r\n    } else {\r\n      socketService.stopTyping(currentRoom);\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const toggleUserList = () => {\r\n    setShowUserList(!showUserList);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"chat-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading chat...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-title\">\r\n          <h2>FlashTalk - {currentRoom}</h2>\r\n          <span className=\"online-count\">{users.length} online</span>\r\n        </div>\r\n        <div className=\"chat-actions\">\r\n          <button onClick={toggleUserList} className=\"users-button\">\r\n            👥 Users\r\n          </button>\r\n          <button onClick={logout} className=\"logout-button\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-main\">\r\n        <div className=\"chat-messages\">\r\n          <MessageList\r\n            messages={messages}\r\n            currentUser={user}\r\n            onDeleteMessage={handleDeleteMessage}\r\n            onEditMessage={handleEditMessage}\r\n          />\r\n          <TypingIndicator users={typingUsers} />\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {showUserList && (\r\n          <UserList\r\n            users={users}\r\n            currentUser={user}\r\n            onClose={() => setShowUserList(false)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <MessageInput\r\n        onSendMessage={handleSendMessage}\r\n        onTyping={handleTyping}\r\n        disabled={!socketService.isConnected()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}