{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANAL\\\\chat-app\\\\frontend\\\\src\\\\components\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [roomInfo, setRoomInfo] = useState({\n    name: 'General',\n    userCount: 0\n  });\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    if (!currentUser) return;\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000', {\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    setSocket(newSocket);\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n\n      // Join the chat with user info\n      newSocket.emit('join_room', {\n        username: currentUser.username || currentUser.name || 'Anonymous',\n        room: 'general',\n        userId: currentUser.id || Date.now().toString()\n      });\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n\n    // Message event handlers\n    newSocket.on('receive_message', messageData => {\n      console.log('Received message:', messageData);\n\n      // Ensure message has proper structure\n      const formattedMessage = {\n        id: messageData.id || Date.now() + Math.random(),\n        text: messageData.text || messageData.message || '',\n        sender: messageData.sender || messageData.username || 'Unknown',\n        senderId: messageData.senderId || messageData.userId,\n        timestamp: messageData.timestamp || new Date().toISOString(),\n        isOwn: messageData.senderId === currentUser.id || messageData.sender === currentUser.username\n      };\n      setMessages(prev => [...prev, formattedMessage]);\n    });\n\n    // User management event handlers\n    newSocket.on('user_joined', data => {\n      console.log('User joined:', data);\n      if (data.username && data.username !== currentUser.username) {\n        const joinMessage = {\n          id: Date.now() + Math.random(),\n          text: `${data.username} joined the chat`,\n          sender: 'System',\n          timestamp: new Date().toISOString(),\n          isSystem: true\n        };\n        setMessages(prev => [...prev, joinMessage]);\n      }\n    });\n    newSocket.on('user_left', data => {\n      console.log('User left:', data);\n      if (data.username && data.username !== currentUser.username) {\n        const leaveMessage = {\n          id: Date.now() + Math.random(),\n          text: `${data.username} left the chat`,\n          sender: 'System',\n          timestamp: new Date().toISOString(),\n          isSystem: true\n        };\n        setMessages(prev => [...prev, leaveMessage]);\n      }\n    });\n    newSocket.on('users_update', usersData => {\n      console.log('Users update:', usersData);\n\n      // Handle different possible data structures\n      let usersList = [];\n      if (Array.isArray(usersData)) {\n        usersList = usersData;\n      } else if (usersData.users && Array.isArray(usersData.users)) {\n        usersList = usersData.users;\n      } else if (typeof usersData === 'object') {\n        usersList = Object.values(usersData);\n      }\n\n      // Format users data consistently\n      const formattedUsers = usersList.map(user => {\n        if (typeof user === 'string') {\n          return {\n            id: user,\n            username: user,\n            status: 'online'\n          };\n        }\n        return {\n          id: user.id || user.username || user.socketId,\n          username: user.username || user.name || user.id,\n          status: user.status || 'online',\n          isOnline: user.isOnline !== undefined ? user.isOnline : true\n        };\n      });\n      setUsers(formattedUsers);\n      setRoomInfo(prev => ({\n        ...prev,\n        userCount: formattedUsers.length\n      }));\n    });\n\n    // Typing indicators\n    newSocket.on('user_typing', data => {\n      if (data.username !== currentUser.username) {\n        setTypingUsers(prev => {\n          if (!prev.includes(data.username)) {\n            return [...prev, data.username];\n          }\n          return prev;\n        });\n\n        // Clear typing indicator after 3 seconds\n        setTimeout(() => {\n          setTypingUsers(prev => prev.filter(user => user !== data.username));\n        }, 3000);\n      }\n    });\n    newSocket.on('user_stopped_typing', data => {\n      setTypingUsers(prev => prev.filter(user => user !== data.username));\n    });\n\n    // Room info updates\n    newSocket.on('room_info', roomData => {\n      setRoomInfo({\n        name: roomData.name || 'General',\n        userCount: roomData.userCount || users.length\n      });\n    });\n\n    // Message history\n    newSocket.on('message_history', history => {\n      console.log('Received message history:', history);\n      if (Array.isArray(history)) {\n        const formattedHistory = history.map(msg => ({\n          id: msg._id || msg.id || Date.now() + Math.random(),\n          text: msg.text || msg.message || '',\n          sender: msg.sender || msg.username || 'Unknown',\n          senderId: msg.senderId || msg.userId,\n          timestamp: msg.timestamp || msg.createdAt || new Date().toISOString(),\n          isOwn: msg.senderId === currentUser.id || msg.sender === currentUser.username\n        }));\n        setMessages(formattedHistory);\n      }\n    });\n\n    // Cleanup function\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [currentUser, users.length]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Update room info when users list changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    setRoomInfo(prev => ({\n      ...prev,\n      userCount: users.length\n    }));\n  }, [users.length]);\n\n  // Handle sending messages\n  const handleSendMessage = messageText => {\n    if (!socket || !messageText.trim() || !isConnected) return;\n    const messageData = {\n      text: messageText.trim(),\n      sender: currentUser.username || currentUser.name || 'Anonymous',\n      senderId: currentUser.id || Date.now().toString(),\n      timestamp: new Date().toISOString(),\n      room: 'general'\n    };\n    console.log('Sending message:', messageData);\n    socket.emit('send_message', messageData);\n\n    // Add message to local state immediately for better UX\n    const localMessage = {\n      ...messageData,\n      id: Date.now() + Math.random(),\n      isOwn: true\n    };\n    setMessages(prev => [...prev, localMessage]);\n  };\n\n  // Handle typing indicators\n  const handleTyping = () => {\n    if (!socket || !isConnected) return;\n    socket.emit('user_typing', {\n      username: currentUser.username || currentUser.name || 'Anonymous',\n      room: 'general'\n    });\n\n    // Clear previous timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Set timeout to stop typing indicator\n    typingTimeoutRef.current = setTimeout(() => {\n      socket.emit('user_stopped_typing', {\n        username: currentUser.username || currentUser.name || 'Anonymous',\n        room: 'general'\n      });\n    }, 1000);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    if (socket) {\n      socket.emit('user_leaving', {\n        username: currentUser.username || currentUser.name || 'Anonymous',\n        room: 'general'\n      });\n      socket.disconnect();\n    }\n    onLogout();\n  };\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-error\",\n      children: \"Please log in to access the chat.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"FlashTalk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-name\",\n            children: roomInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-stats\",\n            children: [roomInfo.userCount, \" \", roomInfo.userCount === 1 ? 'user' : 'users', \" online\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${isConnected ? 'status-online' : 'status-offline'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: isConnected ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        users: users,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: currentUser.username ? currentUser.username.length === 1 ? currentUser.username.toUpperCase() : currentUser.username.substring(0, 2).toUpperCase() : '?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-name\",\n              children: currentUser.username || currentUser.name || 'Anonymous'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-status\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-indicator status-online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-text\",\n                children: \"Online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          title: \"Logout\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n              points: \"16,17 21,12 16,7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"21\",\n              y1: \"12\",\n              x2: \"9\",\n              y2: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"chat-title\",\n            children: roomInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-subtitle\",\n            children: [roomInfo.userCount, \" \", roomInfo.userCount === 1 ? 'member' : 'members', !isConnected && ' • Disconnected']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            title: \"Chat Settings\",\n            disabled: !isConnected,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"12\",\n                cy: \"12\",\n                r: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 1v6m0 6v6m11-7h-6m-6 0H1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        currentUser: currentUser,\n        typingUsers: typingUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: handleSendMessage,\n        onTyping: handleTyping,\n        disabled: !isConnected,\n        typingUsers: typingUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"UNwFNRwpvWXj793hUeYn+VoGWSs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","MessageList","MessageInput","UserList","jsxDEV","_jsxDEV","Chat","currentUser","onLogout","_s","socket","setSocket","messages","setMessages","users","setUsers","isConnected","setIsConnected","typingUsers","setTypingUsers","roomInfo","setRoomInfo","name","userCount","messagesEndRef","typingTimeoutRef","newSocket","process","env","REACT_APP_SERVER_URL","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","emit","username","room","userId","id","Date","now","toString","error","messageData","formattedMessage","Math","random","text","message","sender","senderId","timestamp","toISOString","isOwn","prev","data","joinMessage","isSystem","leaveMessage","usersData","usersList","Array","isArray","Object","values","formattedUsers","map","user","status","socketId","isOnline","undefined","length","includes","setTimeout","filter","roomData","history","formattedHistory","msg","_id","createdAt","disconnect","current","clearTimeout","scrollIntoView","behavior","handleSendMessage","messageText","trim","localMessage","handleTyping","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","substring","onClick","title","width","height","viewBox","fill","stroke","strokeWidth","d","points","x1","y1","x2","y2","disabled","cx","cy","r","ref","onSendMessage","onTyping","_c","$RefreshReg$"],"sources":["C:/Users/SANAL/chat-app/frontend/src/components/chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport MessageList from './MessageList';\r\nimport MessageInput from './MessageInput';\r\nimport UserList from './UserList';\r\n\r\nconst Chat = ({ currentUser, onLogout }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [roomInfo, setRoomInfo] = useState({ name: 'General', userCount: 0 });\r\n  const messagesEndRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  // Initialize socket connection\r\n  useEffect(() => {\r\n    if (!currentUser) return;\r\n\r\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000', {\r\n      autoConnect: true,\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Connection event handlers\r\n    newSocket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setIsConnected(true);\r\n      \r\n      // Join the chat with user info\r\n      newSocket.emit('join_room', {\r\n        username: currentUser.username || currentUser.name || 'Anonymous',\r\n        room: 'general',\r\n        userId: currentUser.id || Date.now().toString()\r\n      });\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    // Message event handlers\r\n    newSocket.on('receive_message', (messageData) => {\r\n      console.log('Received message:', messageData);\r\n      \r\n      // Ensure message has proper structure\r\n      const formattedMessage = {\r\n        id: messageData.id || Date.now() + Math.random(),\r\n        text: messageData.text || messageData.message || '',\r\n        sender: messageData.sender || messageData.username || 'Unknown',\r\n        senderId: messageData.senderId || messageData.userId,\r\n        timestamp: messageData.timestamp || new Date().toISOString(),\r\n        isOwn: messageData.senderId === currentUser.id || messageData.sender === currentUser.username\r\n      };\r\n      \r\n      setMessages(prev => [...prev, formattedMessage]);\r\n    });\r\n\r\n    // User management event handlers\r\n    newSocket.on('user_joined', (data) => {\r\n      console.log('User joined:', data);\r\n      \r\n      if (data.username && data.username !== currentUser.username) {\r\n        const joinMessage = {\r\n          id: Date.now() + Math.random(),\r\n          text: `${data.username} joined the chat`,\r\n          sender: 'System',\r\n          timestamp: new Date().toISOString(),\r\n          isSystem: true\r\n        };\r\n        setMessages(prev => [...prev, joinMessage]);\r\n      }\r\n    });\r\n\r\n    newSocket.on('user_left', (data) => {\r\n      console.log('User left:', data);\r\n      \r\n      if (data.username && data.username !== currentUser.username) {\r\n        const leaveMessage = {\r\n          id: Date.now() + Math.random(),\r\n          text: `${data.username} left the chat`,\r\n          sender: 'System',\r\n          timestamp: new Date().toISOString(),\r\n          isSystem: true\r\n        };\r\n        setMessages(prev => [...prev, leaveMessage]);\r\n      }\r\n    });\r\n\r\n    newSocket.on('users_update', (usersData) => {\r\n      console.log('Users update:', usersData);\r\n      \r\n      // Handle different possible data structures\r\n      let usersList = [];\r\n      \r\n      if (Array.isArray(usersData)) {\r\n        usersList = usersData;\r\n      } else if (usersData.users && Array.isArray(usersData.users)) {\r\n        usersList = usersData.users;\r\n      } else if (typeof usersData === 'object') {\r\n        usersList = Object.values(usersData);\r\n      }\r\n      \r\n      // Format users data consistently\r\n      const formattedUsers = usersList.map(user => {\r\n        if (typeof user === 'string') {\r\n          return {\r\n            id: user,\r\n            username: user,\r\n            status: 'online'\r\n          };\r\n        }\r\n        \r\n        return {\r\n          id: user.id || user.username || user.socketId,\r\n          username: user.username || user.name || user.id,\r\n          status: user.status || 'online',\r\n          isOnline: user.isOnline !== undefined ? user.isOnline : true\r\n        };\r\n      });\r\n      \r\n      setUsers(formattedUsers);\r\n      setRoomInfo(prev => ({\r\n        ...prev,\r\n        userCount: formattedUsers.length\r\n      }));\r\n    });\r\n\r\n    // Typing indicators\r\n    newSocket.on('user_typing', (data) => {\r\n      if (data.username !== currentUser.username) {\r\n        setTypingUsers(prev => {\r\n          if (!prev.includes(data.username)) {\r\n            return [...prev, data.username];\r\n          }\r\n          return prev;\r\n        });\r\n\r\n        // Clear typing indicator after 3 seconds\r\n        setTimeout(() => {\r\n          setTypingUsers(prev => prev.filter(user => user !== data.username));\r\n        }, 3000);\r\n      }\r\n    });\r\n\r\n    newSocket.on('user_stopped_typing', (data) => {\r\n      setTypingUsers(prev => prev.filter(user => user !== data.username));\r\n    });\r\n\r\n    // Room info updates\r\n    newSocket.on('room_info', (roomData) => {\r\n      setRoomInfo({\r\n        name: roomData.name || 'General',\r\n        userCount: roomData.userCount || users.length\r\n      });\r\n    });\r\n\r\n    // Message history\r\n    newSocket.on('message_history', (history) => {\r\n      console.log('Received message history:', history);\r\n      \r\n      if (Array.isArray(history)) {\r\n        const formattedHistory = history.map(msg => ({\r\n          id: msg._id || msg.id || Date.now() + Math.random(),\r\n          text: msg.text || msg.message || '',\r\n          sender: msg.sender || msg.username || 'Unknown',\r\n          senderId: msg.senderId || msg.userId,\r\n          timestamp: msg.timestamp || msg.createdAt || new Date().toISOString(),\r\n          isOwn: msg.senderId === currentUser.id || msg.sender === currentUser.username\r\n        }));\r\n        \r\n        setMessages(formattedHistory);\r\n      }\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [currentUser, users.length]);\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  // Update room info when users list changes\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    setRoomInfo(prev => ({\r\n      ...prev,\r\n      userCount: users.length\r\n    }));\r\n  }, [users.length]);\r\n\r\n  // Handle sending messages\r\n  const handleSendMessage = (messageText) => {\r\n    if (!socket || !messageText.trim() || !isConnected) return;\r\n\r\n    const messageData = {\r\n      text: messageText.trim(),\r\n      sender: currentUser.username || currentUser.name || 'Anonymous',\r\n      senderId: currentUser.id || Date.now().toString(),\r\n      timestamp: new Date().toISOString(),\r\n      room: 'general'\r\n    };\r\n\r\n    console.log('Sending message:', messageData);\r\n    socket.emit('send_message', messageData);\r\n\r\n    // Add message to local state immediately for better UX\r\n    const localMessage = {\r\n      ...messageData,\r\n      id: Date.now() + Math.random(),\r\n      isOwn: true\r\n    };\r\n    \r\n    setMessages(prev => [...prev, localMessage]);\r\n  };\r\n\r\n  // Handle typing indicators\r\n  const handleTyping = () => {\r\n    if (!socket || !isConnected) return;\r\n\r\n    socket.emit('user_typing', {\r\n      username: currentUser.username || currentUser.name || 'Anonymous',\r\n      room: 'general'\r\n    });\r\n\r\n    // Clear previous timeout\r\n    if (typingTimeoutRef.current) {\r\n      clearTimeout(typingTimeoutRef.current);\r\n    }\r\n\r\n    // Set timeout to stop typing indicator\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      socket.emit('user_stopped_typing', {\r\n        username: currentUser.username || currentUser.name || 'Anonymous',\r\n        room: 'general'\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    if (socket) {\r\n      socket.emit('user_leaving', {\r\n        username: currentUser.username || currentUser.name || 'Anonymous',\r\n        room: 'general'\r\n      });\r\n      socket.disconnect();\r\n    }\r\n    onLogout();\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return <div className=\"chat-error\">Please log in to access the chat.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Sidebar with user list */}\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h2>FlashTalk</h2>\r\n          <div className=\"room-info\">\r\n            <div className=\"room-name\">{roomInfo.name}</div>\r\n            <div className=\"room-stats\">\r\n              {roomInfo.userCount} {roomInfo.userCount === 1 ? 'user' : 'users'} online\r\n            </div>\r\n          </div>\r\n          <div className=\"connection-status\">\r\n            <span className={`status-indicator ${isConnected ? 'status-online' : 'status-offline'}`}></span>\r\n            <span className=\"status-text\">\r\n              {isConnected ? 'Connected' : 'Disconnected'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <UserList \r\n          users={users} \r\n          currentUser={currentUser}\r\n        />\r\n\r\n        <div className=\"sidebar-footer\">\r\n          <div className=\"current-user-info\">\r\n            <div className=\"user-avatar\">\r\n              {currentUser.username ? \r\n                (currentUser.username.length === 1 ? \r\n                  currentUser.username.toUpperCase() : \r\n                  currentUser.username.substring(0, 2).toUpperCase()\r\n                ) : \r\n                '?'\r\n              }\r\n            </div>\r\n            <div className=\"user-details\">\r\n              <div className=\"user-name\">\r\n                {currentUser.username || currentUser.name || 'Anonymous'}\r\n              </div>\r\n              <div className=\"user-status\">\r\n                <span className=\"status-indicator status-online\"></span>\r\n                <span className=\"status-text\">Online</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <button \r\n            onClick={handleLogout}\r\n            className=\"logout-button\"\r\n            title=\"Logout\"\r\n          >\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"/>\r\n              <polyline points=\"16,17 21,12 16,7\"/>\r\n              <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main chat area */}\r\n      <div className=\"chat-main\">\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-title-section\">\r\n            <h1 className=\"chat-title\">{roomInfo.name}</h1>\r\n            <p className=\"chat-subtitle\">\r\n              {roomInfo.userCount} {roomInfo.userCount === 1 ? 'member' : 'members'}\r\n              {!isConnected && ' • Disconnected'}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"chat-actions\">\r\n            <button \r\n              className=\"action-button\"\r\n              title=\"Chat Settings\"\r\n              disabled={!isConnected}\r\n            >\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <circle cx=\"12\" cy=\"12\" r=\"3\"/>\r\n                <path d=\"M12 1v6m0 6v6m11-7h-6m-6 0H1\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <MessageList \r\n          messages={messages}\r\n          currentUser={currentUser}\r\n          typingUsers={typingUsers}\r\n        />\r\n        \r\n        <div ref={messagesEndRef} />\r\n\r\n        <MessageInput \r\n          onSendMessage={handleSendMessage}\r\n          onTyping={handleTyping}\r\n          disabled={!isConnected}\r\n          typingUsers={typingUsers}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}